使用vector要有
    #include<vector>
    using std::vector;
初始化vector的方法（只给几种常用的）
    vector<T> vec;
    vector<T> vec(n, val);
    vector<T> vec{a, b, c}; == vector<T> vec={a, b, c}; 
    字符串列表初始化    vector<string> v{"we", "the", "people"};
    
    【向vector对象添加元素】
    vector的成员函数push_back()向其中添加元素。
    push_back()负责把一个值当成vector对象的尾元素“压到(push)”vector对象的尾端
    pop_back()负责把尾端元素移除，一个一个的减少。
    （英文解释：
            void pop_back();
            Delete last element
            Removes the last element in the vector, effectively reducing the container size by one.
            This destroys the removed element.）
C++标准要求vector应该能在运行时高效快速地添加元素，因此在定义vector对象的时候设定其大小也就没什么意义了。

vector支持的操作
v.empty()
v.size()
v.push_back()
v[n]    返回v中第n个元素的引用。
    vector<int> v{1,2,3,4,5,6};
    for(auto &i : v)//引用
        i *= i;//平方
    for(auto i : v)//对v的每个元素，输出用
        cout<<i<<" "<<endl;
        
        v.size()返回size_type类型
        使用时要先指定它是哪种类型定义的
        vector<int>::size_type  //正确
        
        vector索引和string一样，下标的类型是size_type
        不能通过下标来给vector添加元素，使用push_back()
